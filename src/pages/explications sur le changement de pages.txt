chaque page a son "identifiant". Par exemple ici, la page sandwich a un identifiant généré automatiquement nommé SandwichPage.

A chaque fois qu'une page est créée, son identifiant est NomdelapagePage. Avec une majuscule au début du nom de la page suivi de ...Page

exemples:
RootPage
XxxPage
HomePage
SandwichPage
...
et ainsi de suite

Allez dans le dossier app/ pour la suite des explications


dans le fichier app.component.ts, ajoutez:

	import { "Id"Page } from 'emplacement de la page';
	
a la suite des autres import en début de fichier.

Faites de même pour le fichier app.module.ts

Ajoutez "Id"Page en dessous des pages déclarées dans @NgModule -> declarations
										   puis dans @NgModule -> bootstrap
										   
Maintenant, la page souhaitée est déclarée dans votre app, donc l'app reconnait cette page.

Rendez vous dans pages/home pour la suite des instructions.

Maintenant, rentrez dans home.html

Apres la balise <ion-content padding>, entrez une balise permettant de passer a la page suivante, par exemple un bouton comme ceci
<button ion-button round class="button button-full" color="positive" [navPush]="sandwich">joli bouton</button>

Ce qui nous interesse est l'attribut [navPush]="sandwich". 
[NavPush] correspond un un moyen de dévier vers une autre page, on nous "push" sur une autre page.
sandwich est un élément que l'on va déclarer dans le fichier home.ts

Dans home.ts la suite de export class HomePage { , ecrivez sandwich = nom_de_la_page_de_redirectionPage

Cela revient a dire que sandwich, soit l'élément de navPush dans le bouton, va vous rediriger vers la page "nom_de_la_page_de_redirection"

Maintenant, si tout a bien été suivi, lors du clic sur le bouton de home.html, vous serez redirigé vers la page souhaitée.

